paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios registrados en el sistema
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor
    # post:
    #   summary: Crea un nuevo usuario
    #   tags:
    #     - Users
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: "#/components/requestBodies/CreateUser"
    #   responses:
    #     "201":
    #       description: Usuario creado correctamente
    #       content:
    #         application/json:
    #           schema:
    #             $ref: "#/components/schemas/User"
    #     "400":
    #       description: Datos incompletos
    #     "500":
    #       description: Error interno del servidor

  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
    put:
      summary: Actualizar un usuario existente por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/UpdateUser"
      responses:
        "200":
          description: Usuario actualizado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
    delete:
      summary: Eliminar un usuario existente por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        "200":
          description: Usuario eliminado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña encriptada
        role:
          type: string
          description: Rol del usuario (e.g., admin, user)
        pets:
          type: array
          items:
            type: string
          description: IDs de las mascotas asociadas al usuario
      example:
        _id: "67ce0c7cc634792d3b6e9b6d"
        first_name: "Ezequiel"
        last_name: "Apesteguia"
        email: "eze@gmail.com"
        password: "hashed_password"
        role: "user"
        pets:
          - "67ce2194cd79b3522d9d766e"

    requestBodies:
      CreateUser:
        type: object
        properties:
          first_name:
            type: string
            description: Nombre del usuario
          last_name:
            type: string
            description: Apellido del usuario
          email:
            type: string
            format: email
            description: Correo electrónico único
          password:
            type: string
            description: Contraseña del usuario
          role:
            type: string
            description: Rol del usuario
        example:
          first_name: "Ezequiel"
          last_name: "Apesteguia"
          email: "eze@gmail.com"
          password: "hashed_password"
          role: "user"

    UpdateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
        role:
          type: string
          description: Rol del usuario
      example:
        first_name: "Ezequiel"
        last_name: "Apesteguia"
        email: "eze@gmail.com"
        password: "hashed_password"
        role: "user"
